version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: schoolsmart_postgres
    environment:
      POSTGRES_DB: schoolsmart
      POSTGRES_USER: schoolsmart_user
      POSTGRES_PASSWORD: schoolsmart_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - schoolsmart_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: schoolsmart_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - schoolsmart_network
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: schoolsmart_backend
    environment:
      - DATABASE_URL=postgresql://schoolsmart_user:schoolsmart_password@postgres:5432/schoolsmart
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=false
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./models:/app/models
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - schoolsmart_network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: schoolsmart_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    depends_on:
      - backend
    networks:
      - schoolsmart_network
    restart: unless-stopped

  # Frontend (React Native Metro bundler for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: schoolsmart_frontend
    ports:
      - "8081:8081"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - schoolsmart_network
    restart: unless-stopped
    command: npm start

  # AI Model Service (optional - for heavy AI processing)
  ai_service:
    build:
      context: ./ai-models
      dockerfile: Dockerfile
    container_name: schoolsmart_ai_service
    environment:
      - MODEL_PATH=/models
      - GPU_ENABLED=false
    volumes:
      - ./ai-models:/models
      - ./uploads:/uploads
    ports:
      - "8001:8001"
    networks:
      - schoolsmart_network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  postgres_data:
  redis_data:

networks:
  schoolsmart_network:
    driver: bridge
